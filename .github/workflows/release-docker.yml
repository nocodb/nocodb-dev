name: "Release : Docker"

on:
  # Triggered manually
  workflow_dispatch:
    inputs:
      tag:
        description: "Docker image tag"
        required: true
      targetEnv:
        description: "Target Environment"
        required: true
        type: choice
        options:
          - DEV
          - PROD
  # Triggered by release-nocodb.yml / release-nightly-dev.yml
  workflow_call:
    inputs:
      tag:
        description: "Docker image tag"
        required: true
        type: string
      targetEnv:
        description: "Target Environment"
        required: true
        type: string
      isDaily:
        description: "Is it triggered by daily schedule"
        required: false
        type: string
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true

jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo 'triggering release-docker'
#     env:
#       working-directory: ./packages/nocodb
#     strategy:
#       matrix:
#         node-version: [12]
#     steps:
#       - name: Get Docker Repository
#         id: get-docker-repository
#         run: |
#           DOCKER_REPOSITORY=nocodb
#           if [[ ${{ github.event.inputs.targetEnv || inputs.targetEnv }} == 'DEV' ]]; then
#             DOCKER_REPOSITORY=${DOCKER_REPOSITORY}-dev
#           fi
#           echo "::set-output name=DOCKER_REPOSITORY::${DOCKER_REPOSITORY}"
#           echo ${DOCKER_REPOSITORY}
# #       - name: Verifiy
# #         run : |
# #           echo ${{ steps.get-docker-repository.outputs.DOCKER_REPOSITORY }} 
#       - name: Checkout
#         uses: actions/checkout@v2

#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v2
#         with:
#           node-version: ${{ matrix.node-version }}

#       - uses: bahmutov/npm-install@v1
#         with:
#           working-directory: ${{ env.working-directory }}

#       - name: Build nocodb and docker files
#         run: |
#           npm run build
#           npm run docker:build
#         working-directory: ${{ env.working-directory }}

#       - name: Set up QEMU
#         uses: docker/setup-qemu-action@v1

#       - name: Set up Docker Buildx
#         id: buildx
#         uses: docker/setup-buildx-action@v1

#       - name: Cache Docker layers
#         uses: actions/cache@v2
#         with:
#           path: /tmp/.buildx-cache
#           key: ${{ runner.os }}-buildx-${{ github.sha }}
#           restore-keys: |
#             ${{ runner.os }}-buildx-

#       - name: Login to DockerHub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       - name: Build and push
#         uses: docker/build-push-action@v2
#         with:
#           context: ${{ env.working-directory }}
#           build-args: NC_VERSION=${{ github.event.inputs.tag || inputs.tag }}
#           platforms: linux/amd64,linux/arm64,linux/arm/v7
#           cache-from: type=local,src=/tmp/.buildx-cache
#           cache-to: type=local,dest=/tmp/.buildx-cache-new
#           push: true
#           tags: |
#             wingkwong/${{ steps.get-docker-repository.outputs.DOCKER_REPOSITORY }}:${{ github.event.inputs.tag || inputs.tag }}
#             wingkwong/${{ steps.get-docker-repository.outputs.DOCKER_REPOSITORY }}:latest

#         # Temp fix
#         # https://github.com/docker/build-push-action/issues/252
#         # https://github.com/moby/buildkit/issues/1896
#       - name: Move cache
#         run: |
#           rm -rf /tmp/.buildx-cache
#           mv /tmp/.buildx-cache-new /tmp/.buildx-cache
